go_prefix = "github.com/dashjay/baize"

_BUILDIFIER = "@com_github_bazelbuild_buildtools//buildifier"

_GAZELLE = "@bazel_gazelle//cmd/gazelle"

_KAZEL = "@io_k8s_repo_infra//cmd/kazel"

sh_binary(
    name = "update-bazel",
    srcs = ["update-bazel.sh"],
    args = [
        "$(location %s)" % _BUILDIFIER,
        "$(location %s)" % _GAZELLE,
        "$(location %s)" % _KAZEL,
    ],
    data = [
        _BUILDIFIER,
        _GAZELLE,
        _KAZEL,
    ],
)

_GO = "@go_sdk//:bin/go"

sh_binary(
    name = "update-deps",
    srcs = ["update-deps.sh"],
    args = [
        "$(location %s)" % _GO,
        "$(location %s)" % _GAZELLE,
    ],
    data = [
        _GO,
        _GAZELLE,
    ],
)

sh_binary(
    name = "update-proto",
    srcs = ["update-proto.sh"],
    args = [
        "$(execpaths proto-outs)",
        go_prefix,
    ],
    data = ["proto-outs"],
)

filegroup(
    name = "all-protos",
    srcs = [
        "//pkg/proto:all-protos",
    ],
)

genrule(
    name = "genproto",
    srcs = [":all-protos"],
    outs = ["proto-outs"],
    cmd = """for p in $(locations :all-protos)
do
    mkdir -p $@/github.com/dashjay/baize && \
    rp=$$(realpath $$p) && \
    cp -rf $${rp%.a}_/* $@/
done""",
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
